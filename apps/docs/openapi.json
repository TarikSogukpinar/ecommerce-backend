{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce MonoRepo Boilerplate API v.1.0.0",
    "description": "E-commerce MonoRepo Boilerplate API Documentation",
    "version": "1.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://mock-api.tariksogukpinar.dev",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Auth (NestJS)",
      "description": "Authentication related endpoints for NestJS microservice"
    },
    {
      "name": "Users (NestJS)",
      "description": "User-related endpoints for NestJS microservice"
    },
    {
      "name": "Address (NestJS)",
      "description": "Address management in NestJS"
    },
    {
      "name": "Support (NestJS)",
      "description": "Support-related endpoints in NestJS"
    },
    {
      "name": "Admin (NestJS)",
      "description": "Admin-related operations in NestJS"
    },
    {
      "name": "Products (Go)",
      "description": "Product management in Go microservice"
    },
    {
      "name": "Orders (Go)",
      "description": "Order-related operations in Go microservice"
    }
  ],
  "paths": {
    "/nest/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "User register",
        "tags": [
          "Auth (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "User login",
        "tags": [
          "Auth (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/nest/api/v1/user/users": {
      "get": {
        "operationId": "UserController_GetAllUsers",
        "summary": "Get All Users",
        "tags": [
          "Auth (NestJS)"
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/user/me": {
      "get": {
        "operationId": "UserController_Me",
        "summary": "Me",
        "tags": [
          "Auth (NestJS)"
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/user/{id}": {
      "get": {
        "operationId": "UserController_GetUserById",
        "summary": "Get User By Id",
        "tags": [
          "Auth (NestJS)"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "summary": "Update user by ID",
        "tags": [
          "Auth (NestJS)"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request - Invalid data"
          },
          "404": {
            "description": "User not found"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/user/{id}/password": {
      "put": {
        "operationId": "UserController_changePassword",
        "summary": "Change user password",
        "tags": [
          "Auth (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserPassworDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/go/products": {
      "get": {
        "operationId": "GoController_getAllProducts",
        "summary": "Get all products (Go)",
        "tags": [
          "Products (Go)"
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully"
          }
        }
      }
    },
    "/go/api/v1/go/orders": {
      "post": {
        "operationId": "GoController_createOrder",
        "summary": "Create order (Go)",
        "tags": [
          "Orders (Go)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "ChangeUserPassworDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}