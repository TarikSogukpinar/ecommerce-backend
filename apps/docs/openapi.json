{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce MonoRepo Boilerplate API v.1.0.0",
    "description": "E-commerce MonoRepo Boilerplate API Documentation",
    "version": "1.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://mock-api.tariksogukpinar.dev",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Auth (NestJS)",
      "description": "Authentication related endpoints for NestJS microservice"
    },
    {
      "name": "Users (NestJS)",
      "description": "User-related endpoints for NestJS microservice"
    },
    {
      "name": "Address (NestJS)",
      "description": "Address management in NestJS"
    },
    {
      "name": "Support (NestJS)",
      "description": "Support-related endpoints in NestJS"
    },
    {
      "name": "Address (NestJS)",
      "description": "Address endpoints in NestJS"
    },
    {
      "name": "Admin (NestJS)",
      "description": "Admin-related operations in NestJS"
    },
    {
      "name": "Products (Go)",
      "description": "Product management in Go microservice"
    },
    {
      "name": "Orders (Go)",
      "description": "Order-related operations in Go microservice"
    },
    {
      "name": "Category (Go)",
      "description": "Order-related operations in Go microservice"
    }
  ],
  "paths": {
    "/nest/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "User register",
        "tags": [
          "Auth (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "User login",
        "tags": [
          "Auth (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/nest/api/v1/user/users": {
      "get": {
        "operationId": "UserController_GetAllUsers",
        "summary": "Get All Users",
        "tags": [
          "Users (NestJS)"
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/user/me": {
      "get": {
        "operationId": "UserController_Me",
        "summary": "Me",
        "tags": [
          "Users (NestJS)"
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/user/{id}": {
      "get": {
        "operationId": "UserController_GetUserById",
        "summary": "Get User By Id",
        "tags": [
          "Users (NestJS)"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "b2189bdd-890f-4b07-bd81-d30fcc89dada"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "summary": "Update user by ID",
        "tags": [
          "Users (NestJS)"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request - Invalid data"
          },
          "404": {
            "description": "User not found"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/user/{id}/password": {
      "put": {
        "operationId": "UserController_changePassword",
        "summary": "Change user password",
        "tags": [
          "Users (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserPassworDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/address/createAddress": {
      "post": {
        "operationId": "AddressController_createAddress",
        "summary": "Create address",
        "tags": [
          "Address (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address created successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/address/userAddress/{userId}": {
      "get": {
        "operationId": "AddressController_getAllAddressesForUsers",
        "summary": "Get All Addresses For User",
        "tags": [
          "Address (NestJS)"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "b2189bdd-890f-4b07-bd81-d30fcc89dada"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Address retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/address/{addressId}/user/{userId}": {
      "put": {
        "operationId": "AddressController_updateAddress",
        "summary": "Update Address",
        "tags": [
          "Address (NestJS)"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Address ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "AddressController_deleteAddress",
        "summary": "Delete Address",
        "tags": [
          "Address (NestJS)"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Address ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/support/createSupportTicket": {
      "post": {
        "operationId": "SupportController_createSupportTicket",
        "summary": "Create Support Ticket",
        "tags": [
          "Support (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupportTicketDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Support successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/support/getMyTickets": {
      "put": {
        "operationId": "AddressController_getMyTickets",
        "summary": "Get My Tickets",
        "tags": [
          "Support (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "AddressController_deleteAddress",
        "summary": "Delete Support",
        "tags": [
          "Support (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address deleted successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/support/getTicketDetails/{ticketId}/user/{userId}": {
      "get": {
        "operationId": "AddressController_getMyTicketsDetails",
        "summary": "Get My Tickets Details",
        "tags": [
          "Support (NestJS)"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Ticket ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/admin/getAllTickets": {
      "get": {
        "operationId": "AddressController_getAllTickets",
        "summary": "Get All Tickets",
        "tags": [
          "Admin (NestJS)"
        ],
        "responses": {
          "200": {
            "description": "All Tickets retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/admin/updateTicket/{ticketId}": {
      "put": {
        "operationId": "AddressController_updateTicket",
        "summary": "Update Ticket",
        "tags": [
          "Admin (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nest/api/v1/admin/deleteTicket/{id}": {
      "delete": {
        "operationId": "AddressController_deleteTicket",
        "summary": "Delete Ticket",
        "tags": [
          "Admin (NestJS)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/go/api/v1/products": {
      "get": {
        "operationId": "ProductController_getAllProduct",
        "summary": "Get All Product",
        "tags": [
          "Products (Go)"
        ],
        "requestBody": {
          "required": true
        },
        "responses": {
          "200": {
            "description": "All Products retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ProductController_createProduct",
        "summary": "Create Product",
        "tags": [
          "Products (Go)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create product retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ProductController_updateProduct",
        "summary": "Update Product",
        "tags": [
          "Products (Go)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated product retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ProductController_deleteProduct",
        "summary": "Delete Product",
        "tags": [
          "Products (Go)"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "b2189bdd-890f-4b07-bd81-d30fcc89dada"
            },
            "description": "Delete ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated product retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/go/api/v1/{id}": {
      "get": {
        "operationId": "ProductController_getProductById",
        "summary": "Get Products By Id",
        "tags": [
          "Products (Go)"
        ],
        "requestBody": {
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "b2189bdd-890f-4b07-bd81-d30fcc89dada"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {}
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token"
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },

      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "ChangeUserPassworDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "CreateSupportTicketDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "CreateAddressDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "createProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Product Name",
            "description": "Name of the product",
            "minLength": 3,
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "discount_price": {
            "type": "number"
          },
          "is_active": {
            "type": "boolean"
          },
          "stock": {
            "type": "number"
          },
          "sku": {
            "type": "string"
          }
        }
      },
      "UpdateProductDto": {
        "properties": {
          "name": {
            "type": "string",
            "example": "Product Name",
            "description": "Name of the product",
            "minLength": 3,
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "discount_price": {
            "type": "number"
          },
          "is_active": {
            "type": "boolean"
          },
          "stock": {
            "type": "number"
          },
          "sku": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}